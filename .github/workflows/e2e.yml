name: Cypress tests

# https://vercel.com/guides/how-can-i-run-end-to-end-tests-after-my-vercel-preview-deployment

on:
  deployment_status:
jobs:
  run-e2es:
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Use Latest Node.js 🌐
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Checkout code 📥
        uses: actions/checkout@v3

      - name: Cache dependencies 🗄️
        uses: actions/cache@v4
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies 📦
        run: npm ci

      - name: Run Cypress 🧪
        uses: cypress-io/github-action@v6
        env:
          CYPRESS_BASE_URL: ${{ github.event.deployment_status.environment_url }}

      - name: Upload screenshots 📸
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress-screenshots
          path: cypress/screenshots
