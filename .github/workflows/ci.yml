name: E2E test app with Cypress

# https://vercel.com/guides/how-can-i-use-github-actions-with-vercel
# https://vercel.com/guides/how-can-i-run-end-to-end-tests-after-my-vercel-preview-deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on: [deployment_status]

jobs:
  e2e:
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code üì•
        uses: actions/checkout@v3

      - name: Use Node.js 20.x üåê
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - uses: actions/cache@v4
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install Dependencies üì¶
        run: npm ci

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_GITHUB_TOKEN }}

      # - name: Build Project Artifacts
      #   run: vercel build --token=${{ secrets.VERCEL_GITHUB_TOKEN }}

      # # - name: Run the build
      # #   #   # run: vercel --token=${{ secrets.VERCEL_GITHUB_TOKEN }}
      # #   run: npm run dev

      # # - name: Deploy Project Artifacts to Vercel
      # #   run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_GITHUB_TOKEN }}

      # - name: Run Cypress üß™
      #   uses: cypress-io/github-action@v6

      - name: Start server and run tests
        run: |
          npm run dev &
          npx wait-on http://localhost:3000
          npx cypress run

      - name: Upload screenshots üì∏
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress-screenshots
          path: cypress/screenshots
